<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tree on sleepingsaint</title><link>https://sleepingsaint.github.io/blog/tags/tree/</link><description>Recent content in tree on sleepingsaint</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 06 Aug 2021 12:59:53 +0530</lastBuildDate><atom:link href="https://sleepingsaint.github.io/blog/tags/tree/index.xml" rel="self" type="application/rss+xml"/><item><title>N Array Level Order Traversal</title><link>https://sleepingsaint.github.io/blog/series/leetcode-daily/n-array-level-order-traversal/</link><pubDate>Fri, 06 Aug 2021 12:59:53 +0530</pubDate><guid>https://sleepingsaint.github.io/blog/series/leetcode-daily/n-array-level-order-traversal/</guid><description>Question Given an n-ary tree, return the level order traversal of its nodes' values.
Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).
Examples Input: root = [1,null,3,2,4,null,5,6] Output: [[1],[3,2,4],[5,6]] Input: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14] Output: [[1],[2,3,4,5],[6,7,8,9,10],[11,12,13],[14]] Constraints The height of the n-ary tree is less than or equal to 1000 The total number of nodes is between [0, 104] Explanation Level Order Traversal As the name suggests we travese the tree level wise, first the root, then all the children of the root, then children of children of the root and so on.</description></item><item><title>Pathsums 2</title><link>https://sleepingsaint.github.io/blog/series/leetcode-daily/pathsums-2/</link><pubDate>Wed, 04 Aug 2021 13:06:06 +0530</pubDate><guid>https://sleepingsaint.github.io/blog/series/leetcode-daily/pathsums-2/</guid><description>Question Given the root of a binary tree and an integer targetSum, return all root-to-leaf paths where each path&amp;rsquo;s sum equals targetSum.
A leaf is a node with no children.
Examples Input: root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22 Output: [[5,4,11,2],[5,8,4,5]] Input: root = [1,2,3], targetSum = 5 Output: [] Input: root = [1,2], targetSum = 0 Output: [] Constraints The number of nodes in the tree is in the range [0, 5000].</description></item></channel></rss>