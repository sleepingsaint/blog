<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dfs on sleepingsaint</title><link>https://sleepingsaint.github.io/blog/tags/dfs/</link><description>Recent content in dfs on sleepingsaint</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 17 Aug 2021 12:58:18 +0530</lastBuildDate><atom:link href="https://sleepingsaint.github.io/blog/tags/dfs/index.xml" rel="self" type="application/rss+xml"/><item><title>Count Good Nodes in Binary Tree</title><link>https://sleepingsaint.github.io/blog/series/leetcode-daily/count-good-nodes-in-binary-tree/</link><pubDate>Tue, 17 Aug 2021 12:58:18 +0530</pubDate><guid>https://sleepingsaint.github.io/blog/series/leetcode-daily/count-good-nodes-in-binary-tree/</guid><description>Question Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.
Return the number of good nodes in the binary tree.
Examples Input: root = [3,1,4,3,null,1,5] Output: 4 Explanation: Nodes in blue are good. Root Node (3) is always a good node.
Node 4 -&amp;gt; (3,4) is the maximum value in the path starting from the root.</description></item></channel></rss>