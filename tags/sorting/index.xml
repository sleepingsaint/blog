<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sorting on sleepingsaint</title><link>https://sleepingsaint.github.io/blog/tags/sorting/</link><description>Recent content in sorting on sleepingsaint</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 29 Aug 2021 01:45:42 +0530</lastBuildDate><atom:link href="https://sleepingsaint.github.io/blog/tags/sorting/index.xml" rel="self" type="application/rss+xml"/><item><title>Longest Uncommon Subsequence</title><link>https://sleepingsaint.github.io/blog/series/leetcode-daily/longest-uncommon-subsequence/</link><pubDate>Sun, 29 Aug 2021 01:45:42 +0530</pubDate><guid>https://sleepingsaint.github.io/blog/series/leetcode-daily/longest-uncommon-subsequence/</guid><description>Question Given an array of strings strs, return the length of the longest uncommon subsequence between them. If the longest uncommon subsequence does not exist, return -1.
An uncommon subsequence between an array of strings is a string that is a subsequence of one string but not the others.
A subsequence of a string s is a string that can be obtained after deleting any number of characters from s.</description></item><item><title>Maximum Profit in Job Scheduling</title><link>https://sleepingsaint.github.io/blog/series/leetcode-daily/maximum-profit-in-job-scheduling/</link><pubDate>Sun, 29 Aug 2021 01:09:02 +0530</pubDate><guid>https://sleepingsaint.github.io/blog/series/leetcode-daily/maximum-profit-in-job-scheduling/</guid><description>Question We have n jobs, where every job is scheduled to be done from startTime[i] to endTime[i], obtaining a profit of profit[i].
You&amp;rsquo;re given the startTime, endTime and profit arrays, return the maximum profit you can take such that there are no two jobs in the subset with overlapping time range.
If you choose a job that ends at time X you will be able to start another job that starts at time X.</description></item><item><title>Group Anagrams</title><link>https://sleepingsaint.github.io/blog/series/leetcode-daily/group-anagrams/</link><pubDate>Thu, 12 Aug 2021 14:09:06 +0530</pubDate><guid>https://sleepingsaint.github.io/blog/series/leetcode-daily/group-anagrams/</guid><description>Question Given an array of strings strs, group the anagrams together. You can return the answer in any order.
An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.
Examples Input: strs = [&amp;ldquo;eat&amp;rdquo;,&amp;ldquo;tea&amp;rdquo;,&amp;ldquo;tan&amp;rdquo;,&amp;ldquo;ate&amp;rdquo;,&amp;ldquo;nat&amp;rdquo;,&amp;ldquo;bat&amp;rdquo;]
Output: [[&amp;ldquo;bat&amp;rdquo;],[&amp;ldquo;nat&amp;rdquo;,&amp;ldquo;tan&amp;rdquo;],[&amp;ldquo;ate&amp;rdquo;,&amp;ldquo;eat&amp;rdquo;,&amp;ldquo;tea&amp;rdquo;]]
Input: strs = [&amp;quot;&amp;quot;]
Output: [[&amp;quot;&amp;quot;]]
Input: strs = [&amp;ldquo;a&amp;rdquo;]
Output: [[&amp;ldquo;a&amp;rdquo;]]
Constraints 1 &amp;lt;= strs.length &amp;lt;= 104 0 &amp;lt;= strs[i].</description></item></channel></rss>