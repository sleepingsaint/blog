<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>binary tree on sleepingsaint</title><link>https://sleepingsaint.github.io/blog/tags/binary-tree/</link><description>Recent content in binary tree on sleepingsaint</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 19 Aug 2021 20:02:40 +0530</lastBuildDate><atom:link href="https://sleepingsaint.github.io/blog/tags/binary-tree/index.xml" rel="self" type="application/rss+xml"/><item><title>Maximum Product of Splitted Binary Tree</title><link>https://sleepingsaint.github.io/blog/series/leetcode-daily/maximum-product-of-splitted-binary-tree/</link><pubDate>Thu, 19 Aug 2021 20:02:40 +0530</pubDate><guid>https://sleepingsaint.github.io/blog/series/leetcode-daily/maximum-product-of-splitted-binary-tree/</guid><description>Question Given the root of a binary tree, split the binary tree into two subtrees by removing one edge such that the product of the sums of the subtrees is maximized.
Return the maximum product of the sums of the two subtrees. Since the answer may be too large, return it modulo 109 + 7.
Note that you need to maximize the answer before taking the mod and not after taking it.</description></item><item><title>Count Good Nodes in Binary Tree</title><link>https://sleepingsaint.github.io/blog/series/leetcode-daily/count-good-nodes-in-binary-tree/</link><pubDate>Tue, 17 Aug 2021 12:58:18 +0530</pubDate><guid>https://sleepingsaint.github.io/blog/series/leetcode-daily/count-good-nodes-in-binary-tree/</guid><description>Question Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.
Return the number of good nodes in the binary tree.
Examples Input: root = [3,1,4,3,null,1,5] Output: 4 Explanation: Nodes in blue are good. Root Node (3) is always a good node.
Node 4 -&amp;gt; (3,4) is the maximum value in the path starting from the root.</description></item><item><title>Pathsums 2</title><link>https://sleepingsaint.github.io/blog/series/leetcode-daily/pathsums-2/</link><pubDate>Wed, 04 Aug 2021 13:06:06 +0530</pubDate><guid>https://sleepingsaint.github.io/blog/series/leetcode-daily/pathsums-2/</guid><description>Question Given the root of a binary tree and an integer targetSum, return all root-to-leaf paths where each path&amp;rsquo;s sum equals targetSum.
A leaf is a node with no children.
Examples Input: root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22 Output: [[5,4,11,2],[5,8,4,5]] Input: root = [1,2,3], targetSum = 5 Output: [] Input: root = [1,2], targetSum = 0 Output: [] Constraints The number of nodes in the tree is in the range [0, 5000].</description></item></channel></rss>